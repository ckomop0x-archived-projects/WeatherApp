{"version":3,"sources":["helpers/places.js","WeatherDisplay.js","services/url-maker.js","Home.js","App.js","index.js"],"names":["PLACES","name","WeatherDisplay","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","weatherData","city","loadWeather","url","_this2","fetch","undefined","concat","then","res","json","setState","newProps","newState","weather","iconUrl","icon","react_default","a","createElement","className","style","width","marginTop","main","src","alt","description","temp","temp_max","temp_min","wind","speed","Component","Home","src_WeatherDisplay","App","HashRouter","Navbar","Header","Brand","Link","to","Col","md","role","aria-label","map","place","index","key","Button","type","Switch","Route","exact","path","render","src_Home","_ref","match","params","console","log","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a5f9e2da.chunk.js","sourcesContent":["export const PLACES = [\n    {name: 'Amsterdam'},\n    {name: 'Moscow'},\n    {name: 'Kiev'},\n    {name: 'Uzhhorod'},\n    {name: 'Prague'},\n    {name: 'Santa Cruz'},\n    {name: 'Honolulu'}\n];","import React, {Component} from 'react';\nimport {urlMaker} from './services/url-maker';\n\nclass WeatherDisplay extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            weatherData: null,\n            city: this.props.city\n        };\n    }\n\n    componentDidMount () {\n        this.loadWeather(this.props.city);\n    }\n\n    loadWeather (city) {\n        fetch(urlMaker(city))\n            .then(res => res.json())\n            .then(json => {\n                this.setState({weatherData: json});\n            });\n    }\n\n    componentWillReceiveProps (newProps, newState) {\n        if (newProps.city !== this.state.city) {\n            this.setState({city: newProps.city})\n            this.loadWeather(newProps.city);\n        }\n    }\n\n    render () {\n        const {weatherData} = this.state;\n\n        if (!weatherData) {\n            return (\n                <div>Loading<sup>*</sup></div>\n            );\n        } else {\n            const weather = weatherData.weather[0];\n            const iconUrl = 'http://openweathermap.org/img/w/' + weather.icon + '.png';\n\n            return (\n                <div>\n                    <div className=\"card\" style={{width: 400, marginTop: 32}}>\n                        {/*<img className=\"card-img-top\" src=\"https://funtime.kiev.ua/uploads/img/gallery/big/2016/10/uzhgorod-uzhgorod-ukraina-uzhgorodskij-zamok-uzhgorodskaya-oblast-uzhgorod-dostoprimechatelnosti-uzh-57fb1d4ceb34d.jpg\"*/}\n                             {/*alt={weatherData.name} />*/}\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{weatherData.name}</h5>\n                                <p className=\"card-text\">{weather.main} <img src={iconUrl} alt={weatherData.description}/></p>\n                            </div>\n                            <ul className=\"list-group list-group-flush\">\n                                <li className=\"list-group-item\">Current: {weatherData.main.temp}째</li>\n                                <li className=\"list-group-item\">High: {weatherData.main.temp_max}째</li>\n                                <li className=\"list-group-item\">Low: {weatherData.main.temp_min}째</li>\n                                <li className=\"list-group-item\">Low: {weatherData.main.temp_min}째</li>\n                                <li className=\"list-group-item\">Wind Speed: {weatherData.wind.speed} mi/hr</li>\n                            </ul>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default WeatherDisplay;\n","export function urlMaker (url) {\n    if (url === undefined || url === '') {\n        url = 'amsterdam';\n    }\n    return `https://api.openweathermap.org/data/2.5/weather?q=${ url }&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=metric`;\n}","import React from 'react';\nimport WeatherDisplay from './WeatherDisplay';\n\nconst Home = (props) => {\n    return (\n        <div className=\"App\">\n            <div className=\"col-md-12\">\n                <WeatherDisplay city={props.city}/>\n            </div>\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport {HashRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport {Navbar, Col, Button} from 'react-bootstrap';\nimport {PLACES} from './helpers/places';\nimport Home from './Home';\n\nconst App = () => {\n    return (\n        <Router>\n            <div>\n                <Navbar>\n                    <div className=\"container\">\n                        <Navbar.Header>\n                            <Navbar.Brand>\n                                <Link to=\"/\">\n                                    Weather Around the World\n                                </Link>\n                            </Navbar.Brand>\n                        </Navbar.Header>\n                    </div>\n                </Navbar>\n                <div className=\"container\">\n                    <Col md={12}>\n                        <h3>Select a city</h3>\n                    </Col>\n                    <Col md={12}>\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            {PLACES.map((place, index) => {\n                                return (\n                                    <Link key={index} to={`${ place.name }`}>\n                                        <Button type=\"button\" className=\"btn btn-light\" key={index}>\n                                            {place.name}\n                                        </Button>\n                                    </Link>\n                                )\n                            })}\n                        </div>\n                    </Col>\n                    <Switch>\n                        <Route exact path=\"/\" render={() => <Home city='amsterdam'/>}/>\n                        <Route path=\"/:city\" render={({match}) => {\n                            const {city} = match.params;\n                            console.log(city);\n\n                            return <Home city={city}/>\n                        }}/>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}